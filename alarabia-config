upstream gotify {
  # Set the port to the one you are using in gotify
 server 127.0.0.1:8000;
}





upstream socket_nodes {
        ip_hash;
        server 127.0.0.1:3001;
 }






 server {
    #if ($host = alarabia.coducer.xyz) {
        #return 301 https://$host$request_uri;
    #} # managed by Certbot



        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;



        server_name alarabia.coducer.xyz;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                proxy_pass http://127.0.0.1:3000;
        }

       location /socket.io {
                proxy_pass http://127.0.0.1:3001/socket.io;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
        }

        location /api {
                proxy_pass http://127.0.0.1:3001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                rewrite ^/api/?(.*) /$1 break;
                proxy_redirect off;

        }

        location /api/swagger {
                proxy_pass http://127.0.0.1:3001/swagger;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_redirect off;
            }

        location /gotify {
                 proxy_pass        http://127.0.0.1:8000;
                 rewrite ^/gotify(/.*) $1 break;
                 proxy_http_version 1.1;

                # Ensuring it can use websockets
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection "upgrade";
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto http;
                proxy_redirect     http:// $scheme://;

    # The proxy must preserve the host because gotify verifies the host with the origin
    # for WebSocket connections
              proxy_set_header   Host $http_host;

               proxy_connect_timeout   1m;
               proxy_send_timeout      1m;
               proxy_read_timeout      1m;
  }









        # set client body size to 2M #
        client_max_body_size 250M;



     }

        # pass PHP scripts to FastCGI server
                                                                                                                                                                                                                 55,1-8        25%
 #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}








# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
                                                                                                                                                                                         145,1-8       73%

 #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}



    #listen [::]:443 ssl ipv6only=on; # managed by Certbot
    #listen 443 ssl; # managed by Certbot
    #ossl_certificate /etc/letsencrypt/live/alarabia.coducer.xyz/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/alarabia.coducer.xyz/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#









# server {
   # if ($host = alarabia.coducer.xyz) {
 #       return 301 https://$host$request_uri;
  #  } # managed by Certbot


#       listen 80 default_server;
#       listen [::]:80 default_server;



#       server_name alarabia.coducer.xyz;
 #       return 404; # managed by Certbot


#}
                                                                                                                                                                                         244,1         Bot



                                                                          
